@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{ var home = CurrentPage.Site(); }
@if (home.Children.Any())
{
    @* Get the first page in the children *@
var naviLevel = home.Children.First().Level;

    @* Add in level for a CSS hook *@
    <ul class="nav navbar-nav navbar-with-inside clearfix navbar-right with-border">
        @* For each child page under the home node *@
        @foreach (var childPage in home.Children.Where("DocumentTypeAlias =\"LandingPage\""))
        {
            if (childPage.Children.Any())
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "active" : null)">
                    @if (childPage.DocumentTypeAlias == "LandingPage")
                    {
                        <a href="#">@childPage.Name</a>
                        @childPages(childPage.Children)
                    }
                    else
                    {
                        <a href="@childPage.Url">@childPage.Name</a>
                    }
                </li>
            }
            else
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
                    <a href="@childPage.Url">@childPage.Name</a>
                </li>
            }
        }
    </ul>
}
@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
        var naviLevel = pages.First().Level;
        <div class="wrap-inside-nav">
            <div class="inside-col">
                @* Add in level for a CSS hook *@
                <ul class="inside-nav level-@(naviLevel)">
                    @foreach (var page in pages)
                    {
                        <li>
                            <a href="@page.Url">@page.Name</a>

                            @* if the current page has any children *@
                            @if (page.Children.Any())
                            {
                                @* Call our helper to display the children *@
                                @childPages(page.Children)
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
}
